{"version":3,"sources":["components/Footer/Modal/greenTick.gif","components/ProductContainer/ImgContainer/ImgContainer.js","components/ProductContainer/AddToCart/AddToCart.js","components/ProductContainer/ProductContainer.js","components/Footer/Modal/Modal.js","components/Footer/Footer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","ImgContainer","props","className","src","productImage","alt","productName","AddToCart","onClick","incDecHandler","product","_id","Quantity","ProductContainer","Product_img","Product_name","Product_discount","Brand_name","Weight","Product_MRP","Product_price","Modal","modalStatus","modalHandler","require","totalPrice","Footer","total","totalQuantity","products","length","console","log","sumQuantity","sumPrice","i","getTotal","App","state","cartProducts","bind","this","setState","prevState","id","incDec","prevProd","fetch","process","then","response","json","data","JSON","parse","stringify","productItem","map","item","key","Fragment","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5988b53c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/greenTick.7bb021bf.gif\";","import React from \"react\";\r\nimport styles from './ImgContainer.css';\r\nfunction ImgContainer(props) {\r\n    return (\r\n        <div className=\"product-image-container\">\r\n            <img className=\"product-img \" src={props.productImage} alt={props.productName}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImgContainer;","import React from \"react\";\r\n\r\nimport styles from './AddToCart.css';\r\n\r\nfunction AddToCart(props) {\r\n    return (\r\n        <>\r\n            <div className={\"addToCartContainer\"}>\r\n       <button className={\"addToCartButton\"} onClick={()=>props.incDecHandler(props.product._id,1)}>Add To Cart</button>\r\n       <button className={\"incDecButton\"} onClick={()=>props.incDecHandler(props.product._id,-1)}>-</button>\r\n            <div className={\"productQuantity\"}>{props.product.Quantity}</div>\r\n       <button className={\"incDecButton\"} onClick={()=>props.incDecHandler(props.product._id,1)}>+</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddToCart;","import React from \"react\";\r\nimport ImgContainer from \"./ImgContainer/ImgContainer\"\r\nimport AddToCart from \"./AddToCart/AddToCart\"\r\nimport styles from './ProductContainer.css';\r\nfunction ProductContainer(props) {\r\n        return (\r\n            <>\r\n            <div className={\"product-item-container\"}>\r\n                <div className={\"product-item\"}>\r\n                    <div className={\"product-left-section\"}>\r\n                    <ImgContainer productImage={props.product.Product_img} productName={props.product.Product_name}/>\r\n                    <div className={\"discount\"}>{props.product.Product_discount}% OFF</div>\r\n                    </div>\r\n                    <div className={\"product-right-section\"}>\r\n                        <div className={\"brand-name\"}>{props.product.Brand_name}</div>\r\n                        <div className={\"product-name\"}>{props.product.Product_name}</div>\r\n                        <div className={\"weight\"}>{props.product.Weight}</div>\r\n                        <div className={\"product_MRP\"}>MRP {props.product.Product_MRP}</div>\r\n                        <div className={\"product_price\"}>Rs {props.product.Product_price}</div>\r\n                        <AddToCart product={props.product} incDecHandler={props.incDecHandler}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n}\r\nexport default ProductContainer;","import React from \"react\";\r\n\r\nimport styles from './Modal.css';\r\nfunction getModalClass(modalStatus){\r\n    if(modalStatus==true){\r\n        return \"showModal\";\r\n    }\r\n    else{\r\n        return \"hideModal\";\r\n    }\r\n}\r\n\r\nfunction Modal(props) {\r\n    return (\r\n        <div className={getModalClass(props.modalStatus)}>\r\n            <button className={\"closeModalButton\"} onClick={()=>props.modalHandler()}>✕</button>\r\n            <h1 className={\"tSMessage\"}>Transaction Successful ! </h1><img className={\"modalCheckImage\"} src={require('./greenTick.gif')} alt=\"\"/>\r\n            <h2>₹ {props.totalPrice}</h2>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport styles from './Footer.css';\r\nimport Modal from \"./Modal/Modal\"\r\n\r\nfunction getTotal(products) {\r\n    let sumQuantity = 0;\r\n    let sumPrice = 0;\r\n    for (let i = 0; i < products.length; i++) {\r\n        sumQuantity += products[i].Quantity;\r\n        sumPrice += (products[i].Quantity * products[i].Product_price);\r\n    }\r\n    return {\r\n        totalQuantity: sumQuantity,\r\n        totalPrice: sumPrice\r\n    }\r\n}\r\n\r\nfunction Footer(props) {\r\n    let total = {\r\n        totalQuantity: 0,\r\n        totalPrice: 0\r\n    }\r\n    if (props.products.length !== 0) {\r\n        console.log(props.products.length)\r\n        total = getTotal(props.products)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"footer-container\"}>\r\n                <div className={\"footer-left\"}>\r\n                    <div className={\"footer-quantity\"}>Qty : {total.totalQuantity}</div>\r\n                    <div className={\"footer-total\"}>Total : {total.totalPrice}</div>\r\n                </div>\r\n                <div className={\"footer-right\"}>\r\n                    <button className={\"checkOutButton\"} onClick={()=>props.modalHandler()}>CHECKOUT</button>\r\n                    <Modal modalStatus={props.modalStatus} modalHandler={props.modalHandler} totalPrice={total.totalPrice}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport './App.css';\nimport ProductContainer from \"../ProductContainer/ProductContainer\";\nimport {SERVER_DOMAIN_URL} from '../../connectionURL';\nimport Footer from'../Footer/Footer';\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            products: [],\n            cartProducts: [],\n            modalStatus: false\n        }\n        //this.addToCartHandler = this.addToCartHandler.bind(this);\n        this.incDecHandler = this.incDecHandler.bind(this);\n        this.modalHandler = this.modalHandler.bind(this);\n    }\n/*   if seperate add to cart handler needed.\n    addToCartHandler(id) {\n        if (this.state.products.length !== 0) {\n            let prevProd = [...this.state.products]\n            prevProd[id] = {...this.state.products[id]}\n            this.setState({\n                ...this.state,\n                products: [...prevProd],\n            });\n        }\n    }\n */\n\n    modalHandler(){\n        this.setState(prevState=>{\n            return {\n                ...prevState,\n                modalStatus:!prevState.modalStatus\n            }\n        })\n    }\n\n    incDecHandler(id, incDec) {\n\n        if (this.state.products.length !== 0) {\n            let prevProd = [...this.state.products]\n            if (incDec === 1) {\n                prevProd[id].Quantity += 1\n            } else {\n                if (prevProd[id].Quantity !== 0) {\n                    prevProd[id].Quantity -= 1\n                }\n            }\n            //console.log(this.state)\n            //console.log(this.state.cartProducts)\n            this.setState({\n                ...this.state,\n                products: [...prevProd]\n            });\n        }\n\n    }\n\n    componentDidMount() {\n        ////////////////////////////////////Fetching Data///////////////////////////////////////////\n        const fetchPromise = fetch(process.env.PUBLIC_URL+'/dataSet.json');\n        fetchPromise.then(response => {\n            return response.json();\n        }).then(data => {\n            this.setState({\n                products: JSON.parse(JSON.stringify(data)),\n                cartProducts: JSON.parse(JSON.stringify(data))\n            });\n        });\n    }\n\n    render() {\n        //console.log(\"inside product container component\")\n        const productItem = this.state.products.map(item => <ProductContainer key={item._id} product={item}\n                                                                              incDecHandler={this.incDecHandler}/>);\n        return (\n            <React.Fragment>\n\n                <main>\n                    <div className={\"product-container\"}>\n                        {productItem === [] ? console.log(\"Data Fetching\") : productItem}\n                    </div>\n                    <Footer products={this.state.products} modalHandler={this.modalHandler} modalStatus={this.state.modalStatus}/>\n                </main>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}